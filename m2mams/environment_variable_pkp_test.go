package m2mams

import (
	"github.com/stretchr/testify/assert"
	"testing"
)

func TestLoadKeyFromSpecificVar(t *testing.T) {
	fakeEnv := NewFakeEnv()
	pkp := EnvironmentVariablePKProvider{
		environment: fakeEnv,
	}

	fakeEnv.Setenv("SOMECONTEXT-SOMEKEYPAIR-PK", "-----BEGIN RSA PRIVATE KEY-----\n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\n-----END RSA PRIVATE KEY-----\n")

	key, err := pkp.LoadKey("somecontext", "somekeypair")
	assert.NoError(t, err)
	err = key.Validate()
	assert.NoError(t, err)
}

func TestLoadKeyFromGenericVar(t *testing.T) {
	fakeEnv := NewFakeEnv()
	pkp := EnvironmentVariablePKProvider{
		environment: fakeEnv,
	}

	fakeEnv.Setenv("M2MAMS-PK", "-----BEGIN RSA PRIVATE KEY-----\n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\n-----END RSA PRIVATE KEY-----\n")

	key, err := pkp.LoadKey("somecontext", "somekeypair")
	assert.NoError(t, err)
	err = key.Validate()
	assert.NoError(t, err)
}

func TestFailsLoadingKeyIfEnvVarsNotFound(t *testing.T) {
	fakeEnv := NewFakeEnv()
	pkp := EnvironmentVariablePKProvider{
		environment: fakeEnv,
	}

	key, err := pkp.LoadKey("somecontext", "somekeypair")
	assert.Error(t, err)
	assert.Nil(t, key)
}

